generate-pipeline:
  stage: init
  image: docker.io/library/python:3.12
  script: 
    - apt-get -y update && apt-get -y install git
    - python -m pip install jinja2-cli
    - slurm_ver=$(grep "Version:" slurm/slurm.spec | head -n 1 | awk '{print $2}' | cut -d. -f-2 )
    - YYYYMM=$(date +"%Y%m")
    - jinja2 gitlab-ci.d/container-build.yml.j2 ${PIPELINE_CONF} --format=json -D slurm_ver=${slurm_ver} > gitlab-ci.d/container-build.yml
    - jinja2 gitlab-ci.d/container-tag.yml.j2 ${PIPELINE_CONF} --format=json -D slurm_ver=${slurm_ver} -D YYYYMM=${YYYYMM} > gitlab-ci.d/container-tag.yml
    - |
      for TAG in ${EXTRA_TAGS} ; do
        (cd slurm; git checkout ${TAG};)
        slurm_ver=$(grep "Version:" slurm/slurm.spec | head -n 1 | awk '{print $2}' | cut -d. -f-2 )
        echo jinja2 gitlab-ci.d/container-build.yml.j2 ${PIPELINE_CONF} --format=json -D slurm_ver=${slurm_ver} -D GITTAG=${TAG}
        echo jinja2 gitlab-ci.d/container-tag.yml.j2 ${PIPELINE_CONF} --format=json -D slurm_ver=${slurm_ver} -D YYYYMM=${YYYYMM} -D GITTAG=${TAG}
      done
  artifacts:
    when: on_success
    access: all
    expire_in: "1 days"
    paths:
      - ${CI_PROJECT_DIR}/gitlab-ci.d/container-build.yml
      - ${CI_PROJECT_DIR}/gitlab-ci.d/container-tag.yml
