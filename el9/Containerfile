FROM docker.io/library/maven:3.8.7-openjdk-18-slim AS build-jwk-generator
COPY json-web-key-generator /build
WORKDIR /build
RUN mvn package
# Build the app
# Artifact will be stored at /build/target/json-web-key-generator-0.9-SNAPSHOT-jar-with-dependencies.jar
# RUN java -jar /build/target/json-web-key-generator-0.9-SNAPSHOT-jar-with-dependencies.jar --type RSA --size 2048 --algorithm RS256 --idGenerator sha1 --keySet --output /jwks.json --pubKeyOutput /jwks.pub.json

FROM quay.io/rockylinux/rockylinux:9 as build
# Build slurm
COPY el9/*.sh ./
COPY slurm ./slurm-src
RUN ./build-slurm-rpm.sh

# Build entrypoint 
COPY common/entrypoint.m4 ./
RUN wget https://github.com/matejak/argbash/archive/refs/tags/2.10.0.tar.gz -O argbash-2.10.0.tar.gz \
	&& tar xvf argbash-2.10.0.tar.gz \
	&& argbash-2.10.0/bin/argbash entrypoint.m4 -o /opt/entrypoint

FROM quay.io/rockylinux/rockylinux:9
COPY --from=build /opt/slurm-repo /opt/slurm-repo
COPY --from=build /etc/yum.repos.d/slurm.repo /etc/yum.repos.d/slurm.repo
COPY --from=build /opt/entrypoint /opt/entrypoint/bin/entrypoint

RUN dnf -y install yum-utils epel-release \
	&& dnf config-manager --enable crb \
	&& dnf -y install slurm-slurmctld slurm-slurmd slurm-slurmdbd slurm-slurmrestd slurm-sackd slurm-example-configs slurm-contribs slurm-devel slurm-libpmi slurm-pam_slurm java-latest-openjdk java-latest-openjdk-devel

# set up jinja2-cli 
RUN python3 -m venv /opt/entrypoint && /opt/entrypoint/bin/python3 -m pip install jinja2-cli 

# set up 
COPY --from=build-jwk-generator /build/target/json-web-key-generator-0.9-SNAPSHOT-jar-with-dependencies.jar /opt/entrypoint/lib/json-web-key-generator.jar

ENTRYPOINT [ "/opt/entrypoint/bin/entrypoint" ]